<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xsi:schemaLocation="  
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">  
      
     <!-- 注册调度任务 -->  
    <bean id="mapScheduler" lazy-init="false" autowire="no"   
             class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">  
        <property name="dataSource" ref="dataSource"/>
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->    
        <property name="overwriteExistingJobs" value="true" /> 
         <!--必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->  
        <property name="startupDelay" value="30" />  
        <!-- 设置自动启动 -->  
        <property name="autoStartup" value="true" />  
        <property name="triggers">  
                <list>  
                     <ref bean="taskTrigger" />  
                </list>  
        </property>  
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />  
        <property name="configLocation" value="classpath:quartz.properties" />  
    </bean>  
      
    <!-- 配置处理日志任务 -->  
    <bean name="scheduleTask" class="com.uuzz.job.ScheduledTask"/>  
    <!-- 动态创建日志记录表 -->  
      
    <bean id="taskDetail"  
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
          <!-- durability 表示任务完成之后是否依然保留到数据库，默认false   -->  
         <property name="durability" value="true" />  
         <property name="requestsRecovery" value="true" />     
         <property name="jobClass">  
                <value>com.uuzz.config.quartz.PersistenceQuartzJobBean</value>  
        </property>  
       <property name="jobDataAsMap">  
             <map>  
                  <entry key="targetObject" value="scheduleTask" />  
                  <entry key="targetMethod" value="work" />  
            </map>  
        </property>  
    </bean>  
      
    <!-- 定期动态创建数据表 -->  
    <bean id="taskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail" ref="taskDetail"/>   
         <property name="cronExpression" value="0/20 * * * * ? "/>  
    </bean>  
       
</beans>  